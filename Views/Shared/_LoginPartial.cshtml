@using Microsoft.AspNetCore.Identity
@using Shop.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ApplicationUser user = null;
    string fullName = "";
    string role = "";

    if (SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            fullName = $"{user.FirstName} {user.LastName}";
            var roles = await UserManager.GetRolesAsync(user);
            role = roles.FirstOrDefault() ?? "";
        }
    }
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello @fullName
               
                @if (User.IsInRole("Admin"))
                {
                    <span>(Admin)</span>
                }
            </a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
